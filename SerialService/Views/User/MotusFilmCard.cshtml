@using SerialService.Infrastructure.Helpers;
@model SerialService.Models.ElasticVideoMaterial
<div id="@Model.ID" class="mdl-card motus-film-card mdl-cell mdl-cell--6-col-phone mdl-cell--4-col-tablet mdl-cell--2-col mdl-shadow--2dp"
     onclick="location.href='@Url.Action("VideoMaterialDetailPage", new { id = Model.ID })'">
    <div class="poster-relative">
        <div class="poster-absolute">
            @if (!string.IsNullOrEmpty(Model.PosterURL))
            {
                <picture>
                  <source media="(min-width: 1000px) and (max-width: 1600px)" srcset="@Model.PosterURL.Replace("iphone360","iphone180")">
                  <source media="(min-width: 800px) and (max-width: 1000px)" srcset="@Model.PosterURL.Replace("iphone360","iphone120")">
                  <img src="@Model.PosterURL" alt="Постер @Model.Title" style="width:100%;height:100%; min-width:0!important;min-height:0!important">
                </picture>
            }
        </div>
    </div>
    <div class="motus-film-card-info">
        @if (Model.Title.Length < 30)
        {
            <h3 class="motus-film-card-title">@Html.DisplayFor(m => m.Title).ToString()</h3>
        }
        else
        {
            <h3 class="motus-film-card-title">@Html.DisplayFor(m => m.Title).ToString().Substring(0, 25)...</h3>
        }
        <span>@Model.ReleaseDate</span>
    </div>
</div>